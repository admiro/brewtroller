#ifndef UI_LANG_H
#define UI_LANG_H

//**********************************************************************************
// UI Strings
//**********************************************************************************
const char OK[] PROGMEM = "OK";
const char CANCEL[] PROGMEM = "Cancel";
const char EXIT[] PROGMEM = "Exit";
const char DELETE[] PROGMEM = "Delete";
const char ABORT[] PROGMEM = "Abort";
const char MENU[] PROGMEM = "Menu";
const char SPACE[] PROGMEM = " ";
const char INIT_EEPROM[] PROGMEM = "Initialize EEPROM";
const char CONTINUE[] PROGMEM = "Continue";
const char LABEL_BUTTONON[] PROGMEM = "On ";
const char LABEL_BUTTONOFF[] PROGMEM = "Off";
const char ON[] PROGMEM = "On";
const char OFF[] PROGMEM = "Off";
const char LABEL_VALUEON[] PROGMEM = ": On";
const char LABEL_VALUEOFF[] PROGMEM = ": Off";
const char LABEL_AUTO[] PROGMEM = "Auto";
const char LABEL_MANUAL[] PROGMEM = "Manual";
const char LABEL_SETPOINT[] PROGMEM = "Setpoint";
const char LABEL_PAUSETIMER[] PROGMEM = "Pause Timer";

//Global Output Profile display order
const byte outputProfileDisplayOrder[] = {
  OUTPUTPROFILE_ALARM,
  OUTPUTPROFILE_FILLHLT,
  OUTPUTPROFILE_FILLMASH,
  OUTPUTPROFILE_VESSEL1HEAT,
  OUTPUTPROFILE_VESSEL1IDLE,
  OUTPUTPROFILE_VESSEL1PWMACTIVE,
  OUTPUTPROFILE_VESSEL2HEAT,
  OUTPUTPROFILE_VESSEL2IDLE,
  OUTPUTPROFILE_VESSEL2PWMACTIVE,
  OUTPUTPROFILE_VESSEL3HEAT,
  OUTPUTPROFILE_VESSEL3IDLE,
  OUTPUTPROFILE_VESSEL3PWMACTIVE,
  OUTPUTPROFILE_ADDGRAIN,
  OUTPUTPROFILE_STRIKETRANSFER,
  OUTPUTPROFILE_SPARGEIN,
  OUTPUTPROFILE_SPARGEOUT,
  OUTPUTPROFILE_HOPADD,
  OUTPUTPROFILE_CHILL,
  OUTPUTPROFILE_WORTOUT,
  OUTPUTPROFILE_WHIRLPOOL,
  OUTPUTPROFILE_DRAIN,
  OUTPUTPROFILE_USER1,
  OUTPUTPROFILE_USER2,
  OUTPUTPROFILE_USER3
};

const char FILLHLT[] PROGMEM = "Fill HLT";
const char FILLMASH[] PROGMEM = "Fill Mash";
const char ADDGRAIN[] PROGMEM = "Add Grain";
const char MASHHEAT[] PROGMEM = "Mash Heat";
const char MASHIDLE[] PROGMEM = "Mash Idle";
const char SPARGEIN[] PROGMEM = "Sparge In";
const char SPARGEOUT[] PROGMEM = "Sparge Out";
const char BOILADDS[] PROGMEM = "Boil Additions";
const char STRIKETRANSFER[] PROGMEM = "Not Implemented";
const char CHILL[] PROGMEM = "Chill";
const char WORTOUT[] PROGMEM = "Wort Out";
const char WHIRLPOOL[] PROGMEM = "Whirlpool";
const char DRAIN[] PROGMEM = "Drain";
const char HLTHEAT[] PROGMEM = "HLT Heat";
const char HLTIDLE[] PROGMEM = "HLT Idle";
const char KETTLEHEAT[] PROGMEM = "Kettle Heat";
const char KETTLEIDLE[] PROGMEM = "Kettle Idle";
const char USER1[] PROGMEM = "User Profile 1";
const char USER2[] PROGMEM = "User Profile 2";
const char USER3[] PROGMEM = "User Profile 3";
const char ALARM[] PROGMEM = "Alarm";
const char HLTPWMACTIVE[] PROGMEM = "HLT PWM Active";
const char MASHPWMACTIVE[] PROGMEM = "Mash PWM Active";
const char KETTLEPWMACTIVE[] PROGMEM = "Kettle PWM Active";

const char * const TITLE_VLV[] PROGMEM = {
  FILLHLT,
  FILLMASH,
  ADDGRAIN,
  SPARGEIN,
  SPARGEOUT,
  BOILADDS,
  STRIKETRANSFER,
  CHILL,
  WORTOUT,
  WHIRLPOOL,
  DRAIN,
  USER1,
  USER2,
  USER3,
  ALARM,
  HLTHEAT,
  MASHHEAT,
  KETTLEHEAT,
  HLTIDLE,
  MASHIDLE,
  KETTLEIDLE,
  HLTPWMACTIVE,
  MASHPWMACTIVE,
  KETTLEPWMACTIVE,
  EXIT
};

const char RECIPECALCS_STRIKETEMP[] PROGMEM = "Strike Temp:";
const char RECIPECALCS_STRIKEVOL[] PROGMEM =  "Strike Vol:";
const char RECIPECALCS_SPARGEVOL[] PROGMEM =  "Sparge Vol:";
const char RECIPECALCS_PREBOILVOL[] PROGMEM = "Preboil Vol:";
const char RECIPECALCS_GRAINVOL[] PROGMEM =   "Grain Vol:";
const char RECIPECALCS_GRAINLOSS[] PROGMEM =  "Grain Loss:";

const char * const RECIPECALCS[] PROGMEM = {
  RECIPECALCS_STRIKETEMP,
  RECIPECALCS_STRIKEVOL,
  RECIPECALCS_SPARGEVOL,
  RECIPECALCS_PREBOILVOL,
  RECIPECALCS_GRAINVOL,
  RECIPECALCS_GRAINLOSS,
  EXIT
};

const char DOUGHIN[] PROGMEM = "Dough In:";
const char ACID[] PROGMEM = "Acid Rest:";
const char PROTEIN[] PROGMEM = "Protein Rest:";
const char SACCH[] PROGMEM = "Sacch Rest:";
const char SACCH2[] PROGMEM = "Sacch2 Rest:";
const char MASHOUT[] PROGMEM = "Mash Out:";

const char * const TITLE_MASHSTEP[] PROGMEM = {
  DOUGHIN,
  ACID,
  PROTEIN,
  SACCH,
  SACCH2,
  MASHOUT
};

const char ALLOFF[] PROGMEM = "All Off";
const char FILLBOTH[] PROGMEM = "Fill Both";
const char FLYSPARGE[] PROGMEM = "Fly Sparge";
const char WHIRLCHILL[] PROGMEM = "WhirlChill";

const char HOMEMENUOPTIONS_EDITPROGRAM[] PROGMEM = "Edit Program";
const char HOMEMENUOPTIONS_STARTPROGRAM[] PROGMEM = "Start Program";
const char HOMEMENUOPTIONS_RESETALL[] PROGMEM = "Reset All";
const char HOMEMENUOPTIONS_SYSTEMSETUP[] PROGMEM = "System Setup";

const char * const HOMEMENUOPTIONS[] PROGMEM = {
  HOMEMENUOPTIONS_EDITPROGRAM,
  HOMEMENUOPTIONS_STARTPROGRAM,
  DRAIN,
  USER1,
  USER2,
  USER3,
  HOMEMENUOPTIONS_RESETALL,
  HOMEMENUOPTIONS_SYSTEMSETUP,
  EXIT
};

const char MASHMENUOPTIONS_HLTSETPOINT[] PROGMEM = "HLT Setpoint:";
const char MASHMENUOPTIONS_MASHSETPOINT[] PROGMEM = "Mash Setpoint:";
const char MASHMENUOPTIONS_SETTIMER[] PROGMEM = "Set Timer";
const char MASHMENUOPTIONS_STARTTIMER[] PROGMEM = "Start Timer";

const char * const MASHMENUOPTIONS[] PROGMEM = {
  MASHMENUOPTIONS_HLTSETPOINT,
  MASHMENUOPTIONS_MASHSETPOINT,
  MASHMENUOPTIONS_SETTIMER,
  MASHMENUOPTIONS_STARTTIMER,
  CONTINUE,
  ABORT,
  EXIT
};

const char SPARGEMENUOPTIONS_AUTOIN[] PROGMEM = "Auto In";
const char SPARGEMENUOPTIONS_AUTOOUT[] PROGMEM = "Auto Out";
const char SPARGEMENUOPTIONS_AUTOFLY[] PROGMEM = "Auto Fly";
const char SPARGEMENUOPTIONS_HLTTARGET[] PROGMEM = "HLT Target";
const char SPARGEMENUOPTIONS_KETTLETARGET[] PROGMEM = "Kettle Target";
  
const char * const SPARGEMENUOPTIONS[] PROGMEM = {
  SPARGEMENUOPTIONS_AUTOIN,
  SPARGEMENUOPTIONS_AUTOOUT,
  SPARGEMENUOPTIONS_AUTOFLY,
  SPARGEMENUOPTIONS_HLTTARGET,
  SPARGEMENUOPTIONS_KETTLETARGET,
  CONTINUE,
  ABORT,
  EXIT
};

const char BOILMENUOPTIONS_SETTIMER[] PROGMEM = "Set Timer";
const char BOILMENUOPTIONS_STARTTIMER[] PROGMEM = "Start Timer";
const char BOILMENUOPTIONS_BOILCONTROL[] PROGMEM = "Boil Ctrl: ";
const char BOILMENUOPTIONS_SETPOINT[] PROGMEM = "Setpoint: ";
const char BOILMENUOPTIONS_BOILTEMP[] PROGMEM = "Boil Temp: ";
const char BOILMENUOPTIONS_BOILPOWER[] PROGMEM = "Boil Power: ";

const char * const BOILMENUOPTIONS[] PROGMEM = {
  BOILMENUOPTIONS_SETTIMER,
  BOILMENUOPTIONS_STARTTIMER,
  BOILMENUOPTIONS_BOILCONTROL,
  BOILMENUOPTIONS_SETPOINT,
  BOILMENUOPTIONS_BOILTEMP,
  BOILMENUOPTIONS_BOILPOWER,
  WHIRLPOOL,
  CONTINUE,
  ABORT,
  EXIT
};

const char * const BOILCONTROLOPTIONS[] PROGMEM = {
  OFF,
  LABEL_AUTO,
  LABEL_MANUAL,
  LABEL_SETPOINT
};


const char TITLE_VS_HLT[] PROGMEM = "HLT";
const char TITLE_VS_MASH[] PROGMEM = "Mash";
const char TITLE_VS_KETTLE[] PROGMEM = "Kettle";
const char BUBBLER[] PROGMEM = "Bubbler";
const char NONE[] PROGMEM = "None";

const char * const TITLE_VS[] PROGMEM = {
  TITLE_VS_HLT,
  TITLE_VS_MASH,
  TITLE_VS_KETTLE,
  BUBBLER,
  EXIT
};

const char * const VESSELSELECTION[] PROGMEM = {
  TITLE_VS_HLT,
  TITLE_VS_MASH,
  TITLE_VS_KETTLE,
  NONE
};

const char TITLE_TS_H2OIN[] PROGMEM = "H2O In";
const char TITLE_TS_H2OOUT[] PROGMEM = "H2O Out";
const char TITLE_TS_WORTOUT[] PROGMEM = "Wort Out";
const char TITLE_TS_AUX1[] PROGMEM = "AUX 1";
const char TITLE_TS_AUX2[] PROGMEM = "AUX 2";
const char TITLE_TS_AUX3[] PROGMEM = "AUX 3";

const char * const TITLE_TS[] PROGMEM = {
  TITLE_VS_HLT,
  TITLE_VS_MASH,
  TITLE_VS_KETTLE,
  TITLE_TS_H2OIN,
  TITLE_TS_H2OOUT,
  TITLE_TS_WORTOUT,
  TITLE_TS_AUX1,
  TITLE_TS_AUX2,
  TITLE_TS_AUX3
};

const char PIDCYCLE[] PROGMEM = " PID Cycle";
const char PIDGAIN[] PROGMEM = " PID Gain";
const char HYSTERESIS[] PROGMEM = "Hysteresis";
const char CAPACITY[] PROGMEM = "Capacity";
const char CALIBRATION[] PROGMEM = "Calibration";

const char BOIL_TEMP[] PROGMEM = "Boil Temp";
const char BOIL_POWER[] PROGMEM = "Boil Power";
const char EVAPORATION_RATE[] PROGMEM = "Evaporation Rate";
const char GRAIN_DISPLACEMENT[] PROGMEM = "Grain Displacement";
const char GRAIN_LIQUOR_LOSS[] PROGMEM = "Grain Liquor Loss";
const char STRIKE_LOSS[] PROGMEM = "Strike Loss";
const char SPARGE_LOSS[] PROGMEM = "Sparge Loss";
const char MASH_LOSS[] PROGMEM = "Mash Loss";
const char BOIL_LOSS[] PROGMEM = "Boil Loss";

const char SEC[] PROGMEM = "s";

#ifdef USEMETRIC
const char VOLUNIT[] PROGMEM = "l";
const char WTUNIT[] PROGMEM = "kg";
const char TUNIT[] PROGMEM = "C";
const char EVAPUNIT[] PROGMEM = "l /hr";
const char GRAINRATIOUNIT[] PROGMEM = "l /kg";
#else
const char VOLUNIT[] PROGMEM = "gal";
const char WTUNIT[] PROGMEM = "lb";
const char TUNIT[] PROGMEM = "F";
const char EVAPUNIT[] PROGMEM = "gal /hr";
const char GRAINRATIOUNIT[] PROGMEM = "gal/lb";
#endif

const char MIN[] PROGMEM = " min";

const char STARTPROGRAMOPTIONS_GRAINTEMP[] PROGMEM = "Grain Temp:";
const char STARTPROGRAMOPTIONS_START[] PROGMEM = "Start";
const char STARTPROGRAMOPTIONS_DELAYSTART[] PROGMEM = "Delay Start";

const char * const STARTPROGRAMOPTIONS[] PROGMEM = {
  HOMEMENUOPTIONS_EDITPROGRAM,
  STARTPROGRAMOPTIONS_GRAINTEMP,
  STARTPROGRAMOPTIONS_START,
  STARTPROGRAMOPTIONS_DELAYSTART,
  EXIT
};

const char EDITPROGRAMOPTIONS_BATCHVOL[] PROGMEM = "Batch Vol:";
const char EDITPROGRAMOPTIONS_GRAINWEIGHT[] PROGMEM = "Grain Wt:";
const char EDITPROGRAMOPTIONS_BOILLENGTH[] PROGMEM = "Boil Length:";
const char EDITPROGRAMOPTIONS_MASHRATIO[] PROGMEM = "Mash Ratio:";
const char EDITPROGRAMOPTIONS_HLTTEMP[] PROGMEM = "HLT Temp:";
const char EDITPROGRAMOPTIONS_SPARGETEMP[] PROGMEM = "Sparge Temp:";
const char EDITPROGRAMOPTIONS_PITCHTEMP[] PROGMEM = "Pitch Temp:";
const char EDITPROGRAMOPTIONS_MASHSCHED[] PROGMEM = "Mash Schedule";
const char EDITPROGRAMOPTIONS_STRIKEHEAT[] PROGMEM = "Heat Strike In:";
const char EDITPROGRAMOPTIONS_CALCS[] PROGMEM = "Program Calcs";

const char * const EDITPROGRAMOPTIONS[] PROGMEM = {
  OK, //Replaced with recipe name
  EDITPROGRAMOPTIONS_BATCHVOL,
  EDITPROGRAMOPTIONS_GRAINWEIGHT,
  EDITPROGRAMOPTIONS_BOILLENGTH,
  EDITPROGRAMOPTIONS_MASHRATIO,
  EDITPROGRAMOPTIONS_HLTTEMP,
  EDITPROGRAMOPTIONS_SPARGETEMP,
  EDITPROGRAMOPTIONS_PITCHTEMP,
  EDITPROGRAMOPTIONS_MASHSCHED,
  EDITPROGRAMOPTIONS_STRIKEHEAT,
  BOILADDS,
  EDITPROGRAMOPTIONS_CALCS,
  EXIT
};

const char SHAREDOPTIONS_ADDRESS[] PROGMEM =     "Address: ";
const char SHAREDOPTIONS_AUTOADDRESS[] PROGMEM = "Auto Address";
const char SHAREDOPTIONS_IDMODE[] PROGMEM =      "ID Mode: ";
const char SHAREDOPTIONS_CLONE[] PROGMEM =       "Clone";

const char SYSTEMSETUPOPTIONS_SETTINGS[] PROGMEM =        "System Settings";
const char SYSTEMSETUPOPTIONS_TSENSORS[] PROGMEM =        "Temperature Sensors";
const char SYSTEMSETUPOPTIONS_VESSELS[] PROGMEM =         "Vessel Settings";
const char SYSTEMSETUPOPTIONS_OUTPUTPROFILES[] PROGMEM =  "Output Profiles";
//#ifdef OUTPUTBANK_MODBUS
  const char SYSTEMSETUPOPTIONS_RS485OUTPUTS[] PROGMEM =  "RS485 Outputs";
//#endif
const char SYSTEMSETUPOPTIONS_STEPAUTO[] PROGMEM =        "Step Automation";
const char SYSTEMSETUPOPTIONS_TRIGGERS[] PROGMEM =        "Triggers";
//#ifdef RGBIO8_ENABLE
  const char SYSTEMSETUPOPTIONS_RGBIO[] PROGMEM =         "RGBIO Setup";
//#endif  
//#ifdef UI_DISPLAY_SETUP
  const char SYSTEMSETUPOPTIONS_DISPLAY[] PROGMEM =       "Display";
//#endif


const char * const SYSTEMSETUPOPTIONS[] PROGMEM = {
  SYSTEMSETUPOPTIONS_SETTINGS,
  SYSTEMSETUPOPTIONS_TSENSORS,
  SYSTEMSETUPOPTIONS_VESSELS,
  SYSTEMSETUPOPTIONS_OUTPUTPROFILES,
  //#ifdef OUTPUTBANK_MODBUS
    SYSTEMSETUPOPTIONS_RS485OUTPUTS,
  //#endif
  SYSTEMSETUPOPTIONS_STEPAUTO,
  SYSTEMSETUPOPTIONS_TRIGGERS,
  //#ifdef RGBIO8_ENABLE
    SYSTEMSETUPOPTIONS_RGBIO,
  //#endif  
  //#ifdef UI_DISPLAY_SETUP
    SYSTEMSETUPOPTIONS_DISPLAY,
  //#endif
  INIT_EEPROM,
  EXIT
};

const char TSASSIGNOPTIONS_SCAN[] PROGMEM =      "Scan Bus";

const char * const TSASSIGNOPTIONS[] PROGMEM = {
  TSASSIGNOPTIONS_SCAN,
  DELETE,
  SHAREDOPTIONS_CLONE,
  CANCEL,
  EXIT
};

const char SYSTEMOPTIONS_MASHSP[] PROGMEM =      "Mash Specific Heat";
const char SYSTEMOPTIONS_MINSPARGE[] PROGMEM =   "Min Sparge Volume";

const char * const SYSTEMOPTIONS[] PROGMEM = {
  BOIL_TEMP,
  BOIL_POWER,
  EVAPORATION_RATE,
  GRAIN_DISPLACEMENT,
  GRAIN_LIQUOR_LOSS,
  STRIKE_LOSS,
  SPARGE_LOSS,
  MASH_LOSS,
  BOIL_LOSS,
  SYSTEMOPTIONS_MASHSP,
  SYSTEMOPTIONS_MINSPARGE,
  EXIT
};

const char AUTOMATIONOPTIONS_FILLSPARGE[] PROGMEM =       "Fill Sparge: ";
const char AUTOMATIONOPTIONS_STARTFILL[] PROGMEM =        "Start Fill: ";
const char AUTOMATIONOPTIONS_EXITFILL[] PROGMEM =         "Exit Fill: ";
const char AUTOMATIONOPTIONS_EXITPREHEAT[] PROGMEM =      "Exit Preheat: ";
const char AUTOMATIONOPTIONS_STRIKETRANSFER[] PROGMEM =   "Strike Transfer:";
const char AUTOMATIONOPTIONS_EXITGRAIN[] PROGMEM =        "Exit Grain: ";
const char AUTOMATIONOPTIONS_EXITMASH[] PROGMEM =         "Exit Mash: ";
const char AUTOMATIONOPTIONS_FLYSPARGE[] PROGMEM =        "Fly Sparge: ";
const char AUTOMATIONOPTIONS_SPARGEHYSTERESIS[] PROGMEM = "Sparge Hysteresis";
const char AUTOMATIONOPTIONS_EXITSPARGE[] PROGMEM =       "Exit Sparge: ";
const char AUTOMATIONOPTIONS_BOILWHIRL[] PROGMEM =        "Boil Whirl: ";
const char AUTOMATIONOPTIONS_BOILADDS[] PROGMEM =         "Boil Adds: ";
const char AUTOMATIONOPTIONS_PREBOILALARM[] PROGMEM =     "Preboil Alarm: ";

const char * const AUTOMATIONOPTIONS[] PROGMEM = {
  AUTOMATIONOPTIONS_FILLSPARGE,
  AUTOMATIONOPTIONS_STARTFILL,
  AUTOMATIONOPTIONS_EXITFILL,
  AUTOMATIONOPTIONS_EXITPREHEAT,
  AUTOMATIONOPTIONS_STRIKETRANSFER,
  AUTOMATIONOPTIONS_EXITGRAIN,
  AUTOMATIONOPTIONS_EXITMASH,
  AUTOMATIONOPTIONS_FLYSPARGE,
  AUTOMATIONOPTIONS_SPARGEHYSTERESIS,
  AUTOMATIONOPTIONS_EXITSPARGE,
  AUTOMATIONOPTIONS_BOILWHIRL,
  AUTOMATIONOPTIONS_BOILADDS,
  AUTOMATIONOPTIONS_PREBOILALARM,
  EXIT
};

const char MENUVESSELOPTION_PWMOUTPUT[] PROGMEM =     "PWM Output";
const char MENUVESSELOPTION_PWMPERIOD[] PROGMEM =     "PWM Period";
const char MENUVESSELOPTION_PWMRESOLUTION[] PROGMEM = "PWM Resolution";
const char MENUVESSELOPTION_PGAIN[] PROGMEM =         "P Gain";
const char MENUVESSELOPTION_IGAIN[] PROGMEM =         "I Gain";
const char MENUVESSELOPTION_DGAIN[] PROGMEM =         "D Gain";
const char MENUVESSELOPTION_AUTOTUNE[] PROGMEM =      "PID Auto Tune";
const char MENUVESSELOPTION_PIDLIMIT[] PROGMEM =      "PID Limit";
const char MENUVESSELOPTION_VOLUMESENSOR[] PROGMEM =  "Volume Sensor";
const char MENUVESSELOPTION_VOLUMECALIBR[] PROGMEM =  "Volume Calibration";

const char * const MENUVESSELOPTIONS[] PROGMEM = {
  MENUVESSELOPTION_PWMOUTPUT,
  MENUVESSELOPTION_PWMPERIOD,
  MENUVESSELOPTION_PWMRESOLUTION,
  MENUVESSELOPTION_PGAIN,
  MENUVESSELOPTION_IGAIN,
  MENUVESSELOPTION_DGAIN,
  MENUVESSELOPTION_AUTOTUNE,
  MENUVESSELOPTION_PIDLIMIT,
  HYSTERESIS,
  MENUVESSELOPTION_VOLUMESENSOR,
  CAPACITY,
  MENUVESSELOPTION_VOLUMECALIBR,
  SHAREDOPTIONS_CLONE,
  EXIT
};

const char MENUAUTOTUNEOPTION_STARTPERCENT[] PROGMEM =    "Start Power: ";
const char MENUAUTOTUNEOPTION_STEPPERCENT[] PROGMEM =     "Step Power: ";
const char MENUAUTOTUNEOPTION_LOOKBACKSECS[] PROGMEM =    "Lookback Time: ";
const char MENUAUTOTUNEOPTION_INPUTNOISE[] PROGMEM =      "Input Noise: ";
const char MENUAUTOTUNEOPTION_CONTROLTYPE[] PROGMEM =     "Control Type: PI";
const char MENUAUTOTUNEOPTION_START[] PROGMEM =           "Start Auto Tune";

const char * const MENUAUTOTUNEOPTIONS[] PROGMEM = {
  MENUAUTOTUNEOPTION_STARTPERCENT,
  MENUAUTOTUNEOPTION_STEPPERCENT,
  MENUAUTOTUNEOPTION_LOOKBACKSECS,
  MENUAUTOTUNEOPTION_INPUTNOISE,
  MENUAUTOTUNEOPTION_CONTROLTYPE,
  MENUAUTOTUNEOPTION_START,
  EXIT
};

const char AUTOTUNETYPE_ZIEGLER_NICHOLS_PI[] PROGMEM =     "Ziegler-Nichols PI";
const char AUTOTUNETYPE_ZIEGLER_NICHOLS_PID[] PROGMEM =    "Ziegler-Nichols PID";
const char AUTOTUNETYPE_TYREUS_LUYBEN_PI[] PROGMEM =       "Tyreus-Luyben PI";
const char AUTOTUNETYPE_TYREUS_LUYBEN_PID[] PROGMEM =      "Tyreus-Luyben PID";
const char AUTOTUNETYPE_CIANCONE_MARLIN_PI[] PROGMEM =     "Ciancone-Marlin PI";
const char AUTOTUNETYPE_CIANCONE_MARLIN_PID[] PROGMEM =    "Ciancone-Marlin PID";
const char AUTOTUNETYPE_PESSEN_INTEGRAL_PID[] PROGMEM =    "Pessen Integral PID";
const char AUTOTUNETYPE_SOME_OVERSHOOT_PID[] PROGMEM =     "Some Overshoot";
const char AUTOTUNETYPE_NO_OVERSHOOT_PID[] PROGMEM =       "No Overshoot";
const char AUTOTUNETYPE_AMIGOF_PI[] PROGMEM =              "AMIGOf PI";

const char * const MENUAUTOTUNETYPES[] PROGMEM = {
  AUTOTUNETYPE_ZIEGLER_NICHOLS_PI,
  AUTOTUNETYPE_ZIEGLER_NICHOLS_PID,
  AUTOTUNETYPE_TYREUS_LUYBEN_PI,
  AUTOTUNETYPE_TYREUS_LUYBEN_PID,
  AUTOTUNETYPE_CIANCONE_MARLIN_PI,
  AUTOTUNETYPE_CIANCONE_MARLIN_PID,
  AUTOTUNETYPE_PESSEN_INTEGRAL_PID,
  AUTOTUNETYPE_SOME_OVERSHOOT_PID,
  AUTOTUNETYPE_NO_OVERSHOOT_PID,
  AUTOTUNETYPE_AMIGOF_PI
};

const char VOLUMECALIBRATIONOPTIONS_UPDATE[] PROGMEM =      "Update ";
const char VOLUMECALIBRATIONOPTIONS_MANUAL[] PROGMEM =      "Manual Entry";

const char * const VOLUMECALIBRATIONOPTIONS[] PROGMEM = {
  VOLUMECALIBRATIONOPTIONS_UPDATE,
  VOLUMECALIBRATIONOPTIONS_MANUAL,
  DELETE,
  EXIT
};

const char BUBBLEROPTIONS_OUTPUT[] PROGMEM = "Output: ";
const char BUBBLEROPTIONS_INTERVAL[] PROGMEM = "Interval: ";
const char BUBBLEROPTIONS_DURATION[] PROGMEM = "Duration: ";
const char BUBBLEROPTIONS_DELAY[] PROGMEM = "Delay: ";

const char * const BUBBLEROPTIONS[] PROGMEM = {
  BUBBLEROPTIONS_OUTPUT,
  BUBBLEROPTIONS_INTERVAL,
  BUBBLEROPTIONS_DURATION,
  BUBBLEROPTIONS_DELAY,
  EXIT
};

const char MODBUSBOARDOPTIONS_REGISTER[] PROGMEM = "Register: ";
const char MODBUSBOARDOPTIONS_COUNT[] PROGMEM =    "Count: ";

const char * const MODBUSBOARDOPTIONS[] PROGMEM = {
  SHAREDOPTIONS_ADDRESS,
  MODBUSBOARDOPTIONS_REGISTER,
  MODBUSBOARDOPTIONS_COUNT,
  SHAREDOPTIONS_AUTOADDRESS,
  SHAREDOPTIONS_IDMODE,
  DELETE,
  EXIT
};

const char CONNECTIONSTATETITLE_DISABLED[] PROGMEM =     "Disabled";
const char CONNECTIONSTATETITLE_CONNECTED[] PROGMEM = "Connected";
const char CONNECTIONSTATETITLE_ERROR[] PROGMEM =  "Error";

const char * const CONNECTIONSTATETITLES[] PROGMEM = {
  CONNECTIONSTATETITLE_DISABLED,
  CONNECTIONSTATETITLE_CONNECTED,
  CONNECTIONSTATETITLE_ERROR
};

const char TRIGGERTYPETITLE_DISABLED[] PROGMEM =       "Disabled";
#ifdef DIGITAL_INPUTS
  const char TRIGGERTYPETITLE_GPIO[] PROGMEM =         "Digital Input";
#endif
const char TRIGGERTYPETITLE_VOLUME[] PROGMEM =         "Volume";
const char TRIGGERTYPETITLE_SETPOINTDELAY[] PROGMEM =  "Setpoint Delay";

const char * const TITLE_TRIGGERTYPE[] PROGMEM = {
  TRIGGERTYPETITLE_DISABLED,
  #ifdef DIGITAL_INPUTS
    TRIGGERTYPETITLE_GPIO,
  #endif
  TRIGGERTYPETITLE_VOLUME,
  TRIGGERTYPETITLE_SETPOINTDELAY
};

const char TRIGGEROPTIONS_TYPE[] PROGMEM =        "Type:";
const char TRIGGEROPTIONS_INPUT[] PROGMEM =       "Input: 1";
const char TRIGGEROPTIONS_VESSEL[] PROGMEM =      "Vessel: ";
const char TRIGGEROPTIONS_THRESHOLD[] PROGMEM =   "Threshold";
const char TRIGGEROPTIONS_ACTIVELOW[] PROGMEM =   "Active: ";
const char TRIGGEROPTIONS_FILTER[] PROGMEM =      "Profile Filter";
const char TRIGGEROPTIONS_DISABLELIST[] PROGMEM = "Disabled Outputs";
const char TRIGGEROPTIONS_DELAY[] PROGMEM =       "Release Delay: ";

const char * const TRIGGEROPTIONS[] PROGMEM = {
  TRIGGEROPTIONS_TYPE,
  TRIGGEROPTIONS_INPUT,
  TRIGGEROPTIONS_VESSEL,
  TRIGGEROPTIONS_THRESHOLD,
  TRIGGEROPTIONS_ACTIVELOW,
  TRIGGEROPTIONS_FILTER,
  TRIGGEROPTIONS_DISABLELIST,
  TRIGGEROPTIONS_DELAY,
  EXIT
};

const char RGBIOBOARDOPTIONS_ASSIGNMNETS[] PROGMEM = "Assignments";

const char * const RGBIOBOARDOPTIONS[] PROGMEM = {
  SHAREDOPTIONS_ADDRESS,
  SHAREDOPTIONS_AUTOADDRESS,
  SHAREDOPTIONS_IDMODE,
  RGBIOBOARDOPTIONS_ASSIGNMNETS,
  DELETE,
  EXIT
};

const char RGBIOCHANNELCONFIG_ASSIGNMENT[] PROGMEM = "No Assignment";
const char RGBIOCHANNELCONFIG_RECIPE[] PROGMEM =     "Recipe: 1";

const char * const RGBIOCHANNELCONFIGTITLES[] PROGMEM = {
  RGBIOCHANNELCONFIG_ASSIGNMENT,
  RGBIOCHANNELCONFIG_RECIPE,
  DELETE,
  EXIT
};

const char RGBTITLE_OFF[] PROGMEM =     "Off:      0x";
const char RGBTITLE_AUTOOFF[] PROGMEM = "Auto Off: 0x";
const char RGBTITLE_AUTOON[] PROGMEM =  "Auto On:  0x";
const char RGBTITLE_ON[] PROGMEM =      "On:       0x";

const char * const TITLE_RGBMODES[] PROGMEM = {
  RGBTITLE_OFF,
  RGBTITLE_AUTOOFF,
  RGBTITLE_AUTOON,
  RGBTITLE_ON,
  EXIT
};

//**********************************************************************************
// UI Custom LCD Chars
//**********************************************************************************
const byte CHARFIELD[] PROGMEM = {B11111, B00000, B00000, B00000, B00000, B00000, B00000, B00000};
const byte CHARCURSOR[] PROGMEM = {B11111, B11111, B00000, B00000, B00000, B00000, B00000, B00000};
const byte CHARSEL[] PROGMEM = {B10001, B11111, B00000, B00000, B00000, B00000, B00000, B00000};

const byte BMP0[] PROGMEM = {B00000, B00000, B00000, B11111, B10001, B10001, B11111, B00001};
const byte BMP1[] PROGMEM = {B00000, B00000, B00000, B00000, B00000, B00011, B01100, B01111};
const byte BMP2[] PROGMEM = {B00000, B00000, B00000, B00000, B00000, B11100, B00011, B11111};
const byte BMP3[] PROGMEM = {B00100, B01100, B01111, B00111, B00100, B01100, B01111, B00111};
const byte BMP4[] PROGMEM = {B00010, B00011, B11111, B11110, B00010, B00011, B11111, B11110};

const byte UNLOCK_ICON[] PROGMEM = {B00110, B01001, B01001, B01000, B01111, B01111, B01111, B00000};
const byte PROG_ICON[] PROGMEM =   {B00001, B11101, B10101, B11101, B10001, B10001, B00001, B11111};
const byte BELL[] PROGMEM =        {B00100, B01110, B01110, B01110, B11111, B00000, B00100, B00000};

const byte BUTTON_OFF[] PROGMEM =          {B01110, B10001, B10001, B10001, B01110, B00000, B00000, B00000};
const byte BUTTON_ON[] PROGMEM =           {B01110, B11111, B11111, B11111, B01110, B00000, B00000, B00000};
const byte BUTTON_OFF_SELECTED[] PROGMEM = {B01110, B10001, B10001, B10001, B01110, B00000, B00100, B01110};
const byte BUTTON_ON_SELECTED[] PROGMEM =  {B01110, B11111, B11111, B11111, B01110, B00000, B00100, B01110};

#endif
